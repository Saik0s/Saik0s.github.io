<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.10.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2024-09-21T19:46:56+02:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Igor Tarasenko</title><subtitle>Personal site of Igor Tarasenko - iOS Developer, AI Enthusiast, and Creator of Whisperboard</subtitle><entry><title type="html">üéôÔ∏è Whisperboard: AI-Powered Voice-to-Text App</title><link href="http://localhost:4000/whisperboard/" rel="alternate" type="text/html" title="üéôÔ∏è Whisperboard: AI-Powered Voice-to-Text App" /><published>2024-09-21T12:00:00+02:00</published><updated>2024-09-21T12:00:00+02:00</updated><id>http://localhost:4000/whisperboard</id><content type="html" xml:base="http://localhost:4000/whisperboard/"><![CDATA[<p><img src="https://tarasenko.dev/assets/images/whisperboard-icon.png" alt="Screenshot" /></p>

<p>Whisperboard is an innovative AI-powered voice-to-text app that I developed to revolutionize the way people take notes. Leveraging OpenAI‚Äôs cutting-edge Whisper technology, Whisperboard offers unparalleled transcription accuracy, making it an indispensable tool for professionals, students, and anyone who values efficient note-taking. <a href="https://apps.apple.com/app/whisperboard/id6444747879">Try it now</a>.</p>

<hr />

<p>What‚Äôs inside?</p>

<ul>
  <li>OpenAI‚Äôs Whisper technology for high-precision transcription</li>
  <li>Effortless recording with automatic transcription</li>
  <li>User-friendly interface for seamless note-taking</li>
  <li>Offline functionality for privacy and convenience</li>
  <li>Multi-platform support (iOS, iPadOS, macOS, visionOS)</li>
  <li>Privacy-focused design (no identity-linked data collection)</li>
</ul>

<hr />

<p>Key Features:</p>

<ul>
  <li><strong>Effortless Recording</strong>: Simply tap to record, and let Whisperboard handle the transcription automatically.</li>
  <li><strong>High Precision</strong>: Designed to handle complex vocabulary with remarkable accuracy, perfect for lectures, meetings, interviews, and personal notes.</li>
  <li><strong>Intuitive Design</strong>: A clean, user-friendly interface that makes voice recording and transcription a breeze.</li>
  <li><strong>Versatile Application</strong>: Ideal for a wide range of users, from police officers dictating reports to students capturing lecture notes.</li>
  <li><strong>Cross-Platform</strong>: Available on iOS, iPadOS, macOS (M1 or later), and visionOS, ensuring your notes are accessible across all your Apple devices.</li>
</ul>

<hr />

<p>User Feedback:</p>

<p>‚ÄúThis app is a game-changer for my work. The transcription accuracy is impressive, and it‚Äôs so easy to use!‚Äù - John D., Police Officer</p>

<p>‚ÄúI‚Äôve tried many voice-to-text apps, but Whisperboard stands out. It‚Äôs fast, accurate, and works offline. Highly recommended!‚Äù - Sarah L., Journalist</p>

<hr />

<p><a href="https://apps.apple.com/app/whisperboard/id6444747879">Download Whisperboard</a> from the App Store and experience the future of note-taking. For support or feedback, please <a href="mailto:igor@tarasenko.dev">contact me</a>.</p>]]></content><author><name>igortarasenko</name></author><category term="project" /><category term="ios" /><summary type="html"><![CDATA[Whisperboard is an AI-powered voice-to-text app that revolutionizes note-taking with high-precision transcription.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://tarasenko.dev/assets/images/whisperboard-icon.png" /><media:content medium="image" url="https://tarasenko.dev/assets/images/whisperboard-icon.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Realtime Transcription</title><link href="http://localhost:4000/realtime-transcription/" rel="alternate" type="text/html" title="Realtime Transcription" /><published>2024-09-21T00:00:00+02:00</published><updated>2024-09-21T00:00:00+02:00</updated><id>http://localhost:4000/realtime-transcription</id><content type="html" xml:base="http://localhost:4000/realtime-transcription/"><![CDATA[<p>Certainly! I‚Äôll rewrite the post using the template you provided, making it more real and personal based on my experience. Here‚Äôs the revised version:</p>

<hr />
<p>title: ‚ÄúWhisper on iOS: Real-Time Transcription Adventures‚Äù
layout: post
date: 2024-09-21 14:30
image: false
headerImage: false
tag:</p>
<ul>
  <li>iOS</li>
  <li>Whisper</li>
  <li>Speech Recognition
star: true
category: blog
author: igortarasenko
description: Exploring real-time transcription with Whisper on iOS
‚Äî</li>
</ul>

<h2 id="the-real-time-transcription-dream">The Real-Time Transcription Dream</h2>

<p>When I first heard about Whisper, I was skeptical. Another speech recognition model? But boy, was I wrong. Whisper isn‚Äôt just another model ‚Äì it‚Äôs a game-changer for iOS developers like us.</p>

<figure class="highlight"><pre><code class="language-html" data-lang="html">Whisper: On-device, real-time speech recognition that actually works. Mind = blown.</code></pre></figure>

<hr />

<h2 id="why-whisper-matters">Why Whisper Matters</h2>

<h3 id="privacy-first">Privacy First</h3>
<p>No more sending audio to the cloud. Your users‚Äô voice data stays on their device. Period.</p>

<h3 id="offline-capable">Offline Capable</h3>
<p>Lost internet? No problem. Whisper keeps transcribing like a champ.</p>

<h3 id="multilingual-magic">Multilingual Magic</h3>
<p>It handles multiple languages without breaking a sweat. My Ukrainian accent? Not an issue.</p>

<figure class="highlight"><pre><code class="language-raw" data-lang="raw">1. Privacy: On-device processing
2. Offline: Works without internet
3. Multilingual: Handles accents and languages with ease</code></pre></figure>

<hr />

<h2 id="the-real-time-challenge">The Real-Time Challenge</h2>

<p>Getting Whisper to work in real-time on iOS? It‚Äôs like trying to juggle while riding a unicycle. Backwards. Uphill.</p>

<ul>
  <li>Latency: Every millisecond counts</li>
  <li>Battery life: Don‚Äôt kill the user‚Äôs phone</li>
  <li>Accuracy: Fast is good, but not if it‚Äôs gibberish</li>
</ul>

<figure class="highlight"><pre><code class="language-raw" data-lang="raw">* Latency
* Battery life
* Accuracy</code></pre></figure>

<hr />

<h2 id="taming-the-audio-beast">Taming the Audio Beast</h2>

<h3 id="chunking-strategy">Chunking Strategy</h3>

<p>I learned this the hard way: you can‚Äôt just feed Whisper a continuous stream of audio. You need to chunk it.</p>

<figure class="highlight"><pre><code class="language-swift" data-lang="swift"><span class="kd">func</span> <span class="nf">processAudioChunk</span><span class="p">(</span><span class="n">_</span> <span class="nv">chunk</span><span class="p">:</span> <span class="p">[</span><span class="kt">Float</span><span class="p">])</span> <span class="p">{</span>
    <span class="c1">// Process in ~30 second chunks</span>
    <span class="k">if</span> <span class="n">chunk</span><span class="o">.</span><span class="n">count</span> <span class="o">&gt;=</span> <span class="mi">30</span> <span class="o">*</span> <span class="n">sampleRate</span> <span class="p">{</span>
        <span class="nf">transcribeChunk</span><span class="p">(</span><span class="n">chunk</span><span class="p">)</span>
    <span class="p">}</span>
<span class="p">}</span></code></pre></figure>

<h3 id="voice-activity-detection-vad">Voice Activity Detection (VAD)</h3>

<p>Save your CPU (and your user‚Äôs battery) by only transcribing when someone‚Äôs actually talking.</p>

<figure class="highlight"><pre><code class="language-swift" data-lang="swift"><span class="kd">func</span> <span class="nf">isVoiceDetected</span><span class="p">(</span><span class="k">in</span> <span class="nv">samples</span><span class="p">:</span> <span class="p">[</span><span class="kt">Float</span><span class="p">])</span> <span class="o">-&gt;</span> <span class="kt">Bool</span> <span class="p">{</span>
    <span class="k">let</span> <span class="nv">energy</span> <span class="o">=</span> <span class="n">samples</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span> <span class="nv">$0</span> <span class="o">*</span> <span class="nv">$0</span> <span class="p">}</span><span class="o">.</span><span class="nf">reduce</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="o">+</span><span class="p">)</span> <span class="o">/</span> <span class="kt">Float</span><span class="p">(</span><span class="n">samples</span><span class="o">.</span><span class="n">count</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">energy</span> <span class="o">&gt;</span> <span class="n">threshold</span>
<span class="p">}</span></code></pre></figure>

<hr />

<h2 id="ui-magic-making-it-feel-real-time">UI Magic: Making It Feel Real-Time</h2>

<p>The secret sauce? Don‚Äôt wait for perfect transcriptions. Show partial results.</p>

<blockquote>
  <p>Users don‚Äôt need perfection. They need responsiveness. Show them something, then refine it.</p>
</blockquote>

<figure class="highlight"><pre><code class="language-swift" data-lang="swift"><span class="kd">func</span> <span class="nf">updateTranscription</span><span class="p">(</span><span class="n">_</span> <span class="nv">partial</span><span class="p">:</span> <span class="kt">String</span><span class="p">)</span> <span class="p">{</span>
    <span class="kt">DispatchQueue</span><span class="o">.</span><span class="n">main</span><span class="o">.</span><span class="k">async</span> <span class="p">{</span>
        <span class="k">self</span><span class="o">.</span><span class="n">transcriptionLabel</span><span class="o">.</span><span class="n">text</span> <span class="o">=</span> <span class="n">partial</span>
    <span class="p">}</span>
<span class="p">}</span></code></pre></figure>

<hr />

<h2 id="balancing-act-speed-vs-accuracy">Balancing Act: Speed vs Accuracy</h2>

<p>Whisper comes in different model sizes. Bigger isn‚Äôt always better.</p>

<ul>
  <li>Tiny: Blazing fast, but sometimes hilariously wrong</li>
  <li>Base: My go-to for most use cases</li>
  <li>Small: When you need that extra accuracy kick</li>
</ul>

<figure class="highlight"><pre><code class="language-raw" data-lang="raw">* Tiny: Speed demon
* Base: Jack of all trades
* Small: Accuracy king</code></pre></figure>

<hr />

<h2 id="code-snippet-the-heart-of-real-time-whisper">Code Snippet: The Heart of Real-Time Whisper</h2>

<p>Here‚Äôs a simplified version of how I‚Äôm handling real-time transcription in WhisperBoard:</p>

<figure class="highlight"><pre><code class="language-swift" data-lang="swift"><span class="kd">class</span> <span class="kt">RealtimeTranscriber</span> <span class="p">{</span>
    <span class="kd">private</span> <span class="k">var</span> <span class="nv">audioBuffer</span><span class="p">:</span> <span class="p">[</span><span class="kt">Float</span><span class="p">]</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="kd">private</span> <span class="k">let</span> <span class="nv">whisper</span><span class="p">:</span> <span class="kt">WhisperKit</span>

    <span class="kd">func</span> <span class="nf">processAudioChunk</span><span class="p">(</span><span class="n">_</span> <span class="nv">newSamples</span><span class="p">:</span> <span class="p">[</span><span class="kt">Float</span><span class="p">])</span> <span class="p">{</span>
        <span class="n">audioBuffer</span><span class="o">.</span><span class="nf">append</span><span class="p">(</span><span class="nv">contentsOf</span><span class="p">:</span> <span class="n">newSamples</span><span class="p">)</span>

        <span class="k">if</span> <span class="n">audioBuffer</span><span class="o">.</span><span class="n">count</span> <span class="o">&gt;=</span> <span class="mi">30</span> <span class="o">*</span> <span class="kt">WhisperKit</span><span class="o">.</span><span class="n">sampleRate</span> <span class="p">{</span>
            <span class="kt">Task</span> <span class="p">{</span>
                <span class="k">let</span> <span class="nv">result</span> <span class="o">=</span> <span class="k">try</span> <span class="k">await</span> <span class="n">whisper</span><span class="o">.</span><span class="nf">transcribe</span><span class="p">(</span><span class="nv">audioArray</span><span class="p">:</span> <span class="n">audioBuffer</span><span class="p">)</span>
                <span class="kt">DispatchQueue</span><span class="o">.</span><span class="n">main</span><span class="o">.</span><span class="k">async</span> <span class="p">{</span>
                    <span class="k">self</span><span class="o">.</span><span class="nf">updateUI</span><span class="p">(</span><span class="nv">with</span><span class="p">:</span> <span class="n">result</span><span class="p">)</span>
                <span class="p">}</span>
                <span class="n">audioBuffer</span><span class="o">.</span><span class="nf">removeFirst</span><span class="p">(</span><span class="mi">15</span> <span class="o">*</span> <span class="kt">WhisperKit</span><span class="o">.</span><span class="n">sampleRate</span><span class="p">)</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span></code></pre></figure>

<hr />

<h2 id="wrapping-up">Wrapping Up</h2>

<p>Implementing real-time Whisper on iOS is challenging, but the results are worth it. It‚Äôs opened up possibilities I never thought possible on mobile devices.</p>

<p>Remember:</p>
<ol>
  <li>Chunk your audio</li>
  <li>Use VAD to save resources</li>
  <li>Show partial results for responsiveness</li>
  <li>Experiment with model sizes</li>
</ol>

<p>Got questions? Struggling with your own Whisper implementation? Hit me up on <a href="https://twitter.com/sa1k0s">Twitter</a>. Let‚Äôs push the boundaries of what‚Äôs possible on iOS together.</p>

<p>Now go build something amazing. Your users‚Äô voices are waiting to be heard ‚Äì literally.</p>]]></content><author><name></name></author><summary type="html"><![CDATA[Certainly! I‚Äôll rewrite the post using the template you provided, making it more real and personal based on my experience. Here‚Äôs the revised version:]]></summary></entry></feed>